package gui_control.MovingBarSettingView;

import java.util.ArrayList;

import gui_control.DataHandler.DataHandler;
import gui_control.MovingBarSideModel.MovingBarSideModel;
import gui_control.ScenarioModel.ScenarioModel;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.ColorPicker;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;

public class MovingBarSettingController {
	@FXML
    private ChoiceBox<String> frontScenarioChoicebox;

    @FXML
    private ColorPicker frontDisplayColor;

    @FXML
    private ColorPicker frontReferenceColor;

    @FXML
    private ChoiceBox<String> frontModeChoicebox;

    @FXML
    private TextField frontRefrenceTextfield;

    @FXML
    private TextField frontStepsizeTextfield;

    @FXML
    private ChoiceBox<String> leftScenarioChoicebox;

    @FXML
    private ColorPicker leftDisplayColor;

    @FXML
    private ColorPicker leftReferenceColor;

    @FXML
    private ChoiceBox<String> leftModeChoicebox;

    @FXML
    private TextField leftRefrenceTextfield;

    @FXML
    private TextField leftStepsizeTextfield;

    @FXML
    private ChoiceBox<String> rightScenarioChoicebox;

    @FXML
    private ColorPicker rightDisplayColor;

    @FXML
    private ColorPicker rightReferenceColor;

    @FXML
    private ChoiceBox<String> rightModeChoicebox;

    @FXML
    private TextField rightRefrenceTextfield;

    @FXML
    private TextField rightStepsizeTextfield;

    @FXML
    private ChoiceBox<String> backScenarioChoicebox;

    @FXML
    private ColorPicker backDisplayColor;

    @FXML
    private ColorPicker backReferenceColor;

    @FXML
    private ChoiceBox<String> backModeChoicebox;

    @FXML
    private TextField backRefrenceTextfield;

    @FXML
    private TextField backStepsizeTextfield;
    
    DataHandler dataHandler;
    
    ObservableList<String> scenarios; /*TODO:MODEL*/
    
    ObservableList<String> modes;
    
    @FXML
	private void initialize(){
    	
    	modes = FXCollections.observableArrayList(dataHandler.getModes());
		
    	if(modes!=null){
			frontModeChoicebox.setItems(modes);
			leftModeChoicebox.setItems(modes);
			rightModeChoicebox.setItems(modes);
			backModeChoicebox.setItems(modes);	
		}
    	
		
		if(scenarios != null)frontScenarioChoicebox.setItems(scenarios);
		
		applyDataFromHandler();
		
	}
    
    public void applyDataFromHandler(){
    	
    	scenarios = scenarioListToNames(dataHandler.getScenarios());
    	
    	MovingBarSideModel frontSide = dataHandler.getFrontSide();
    	frontDisplayColor.setValue(frontSide.getQuantityColor());
    	frontReferenceColor.setValue(frontSide.getReferenceColor());
    	frontRefrenceTextfield.setText(Integer.toString(frontSide.getReferenceValue()));
    	frontStepsizeTextfield.setText(Integer.toString(frontSide.getStepSize()));
    	
    	MovingBarSideModel leftSide = dataHandler.getLeftSide();
    	leftDisplayColor.setValue(leftSide.getQuantityColor());
    	leftReferenceColor.setValue(leftSide.getReferenceColor());
    	leftRefrenceTextfield.setText(Integer.toString(leftSide.getReferenceValue()));
    	leftStepsizeTextfield.setText(Integer.toString(leftSide.getStepSize()));
    	
    	MovingBarSideModel rightSide = dataHandler.getRightSide();
    	rightDisplayColor.setValue(rightSide.getQuantityColor());
    	rightReferenceColor.setValue(rightSide.getReferenceColor());
    	rightRefrenceTextfield.setText(Integer.toString(rightSide.getReferenceValue()));
    	rightStepsizeTextfield.setText(Integer.toString(rightSide.getStepSize()));
    	
    	MovingBarSideModel backSide = dataHandler.getBackSide();
    	backDisplayColor.setValue(backSide.getQuantityColor());
    	backReferenceColor.setValue(backSide.getReferenceColor());
    	backRefrenceTextfield.setText(Integer.toString(backSide.getReferenceValue()));
    	backStepsizeTextfield.setText(Integer.toString(backSide.getStepSize()));
    	
    }
    
    public void saveData(){
    	
    	
    	//dataHandler.setFrontSide(frontDisplayColor.getValue(), frontReferenceColor.getValue(),frontRefrenceTextfield. , stepSize, mode);
    }
    
    public void setDataHandler(DataHandler dataHandler){
    	this.dataHandler = dataHandler;
    }
    
    public ObservableList<String> scenarioListToNames(ArrayList<ScenarioModel> scenarios){
    	ArrayList<String> list = new ArrayList<String>();
    	for(ScenarioModel s: scenarios){
    		list.add(s.getName());
    	}
    	
    	return FXCollections.observableArrayList(list);
    }
    
}
